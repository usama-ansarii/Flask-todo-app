{"ast":null,"code":"var _jsxFileName = \"/home/hp/Public/todo/frontend/src/components/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  // ✅ Check login status on mount\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\"); // token set after login\n    if (token) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n\n  // ✅ Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\"); // remove token\n    setIsLoggedIn(false);\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar__logo\",\n      children: \"TODO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar__buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/add\",\n        className: \"nav-btn\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/list\",\n        className: \"nav-btn\",\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"login-btn logout\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        className: \"login-btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_s(Navbar, \"JNNAVcL03XZIkY/1G2PDQyJFRpk=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","jsxDEV","_jsxDEV","Navbar","_s","isLoggedIn","setIsLoggedIn","navigate","token","localStorage","getItem","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","_c","$RefreshReg$"],"sources":["/home/hp/Public/todo/frontend/src/components/Navbar.jsx"],"sourcesContent":["  import React, { useEffect, useState } from \"react\";\n  import { Link, useNavigate } from \"react-router-dom\";\n\n  function Navbar() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const navigate = useNavigate();\n\n    // ✅ Check login status on mount\n    useEffect(() => {\n      const token = localStorage.getItem(\"token\"); // token set after login\n      if (token) {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n    }, []);\n\n    // ✅ Handle logout\n    const handleLogout = () => {\n      localStorage.removeItem(\"token\"); // remove token\n      setIsLoggedIn(false);\n      navigate(\"/login\");\n    };\n\n    return (\n      <nav className=\"navbar\">\n        <div className=\"navbar__logo\">TODO</div>\n\n        <div className=\"navbar__buttons\">\n          <Link to=\"/add\" className=\"nav-btn\">\n            Add Todo\n          </Link>\n          <Link to=\"/list\" className=\"nav-btn\">\n            Todo List\n          </Link>\n\n          {isLoggedIn ? (\n            <button onClick={handleLogout} className=\"login-btn logout\">\n              Logout\n            </button>\n          ) : (\n            <button\n              onClick={() => navigate(\"/login\")}\n              className=\"login-btn\"\n            >\n              Login\n            </button>\n          )}\n        </div>\n      </nav>\n    );\n  }\n\n  export default Navbar;\n"],"mappings":";;AAAE,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACAH,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,IAAIF,KAAK,EAAE;MACTF,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLA,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzBF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCN,aAAa,CAAC,KAAK,CAAC;IACpBC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEL,OAAA;IAAKW,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBZ,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAExChB,OAAA;MAAKW,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BZ,OAAA,CAACH,IAAI;QAACoB,EAAE,EAAC,MAAM;QAACN,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAEpC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPhB,OAAA,CAACH,IAAI;QAACoB,EAAE,EAAC,OAAO;QAACN,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAErC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAENb,UAAU,gBACTH,OAAA;QAAQkB,OAAO,EAAET,YAAa;QAACE,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEThB,OAAA;QACEkB,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAAC,QAAQ,CAAE;QAClCM,SAAS,EAAC,WAAW;QAAAC,QAAA,EACtB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAhDQD,MAAM;EAAA,QAEIH,WAAW;AAAA;AAAAqB,EAAA,GAFrBlB,MAAM;AAkDf,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}