{"ast":null,"code":"var _jsxFileName = \"/home/hp/Public/todo/frontend/src/components/Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // ✅ Check login state (based on token)\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    setIsLoggedIn(!!token);\n  }, [location]); // runs on route change (so it updates after login/logout)\n\n  // ✅ Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setIsLoggedIn(false);\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar__logo\",\n      onClick: () => navigate(\"/\"),\n      children: \"TODO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar__buttons\",\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add\",\n          className: \"nav-btn\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/list\",\n          className: \"nav-btn\",\n          children: \"Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"login-btn logout\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        className: \"login-btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"dmodY+Zrud3OBJG7Ja7Fj0h2GwY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","isLoggedIn","setIsLoggedIn","navigate","location","token","localStorage","getItem","handleLogout","removeItem","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/hp/Public/todo/frontend/src/components/Navbar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\n\nfunction Navbar() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // ✅ Check login state (based on token)\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    setIsLoggedIn(!!token);\n  }, [location]); // runs on route change (so it updates after login/logout)\n\n  // ✅ Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setIsLoggedIn(false);\n    navigate(\"/login\");\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar__logo\" onClick={() => navigate(\"/\")}>\n        TODO\n      </div>\n\n      <div className=\"navbar__buttons\">\n        {isLoggedIn && (\n          <>\n            <Link to=\"/add\" className=\"nav-btn\">\n              Add Todo\n            </Link>\n            <Link to=\"/list\" className=\"nav-btn\">\n              Todo List\n            </Link>\n          </>\n        )}\n\n        {isLoggedIn ? (\n          <button onClick={handleLogout} className=\"login-btn logout\">\n            Logout\n          </button>\n        ) : (\n          <button onClick={() => navigate(\"/login\")} className=\"login-btn\">\n            Login\n          </button>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElE,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACAJ,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CL,aAAa,CAAC,CAAC,CAACG,KAAK,CAAC;EACxB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB;EACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzBF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChCH,YAAY,CAACG,UAAU,CAAC,MAAM,CAAC;IAC/BP,aAAa,CAAC,KAAK,CAAC;IACpBC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA;IAAKc,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBf,OAAA;MAAKc,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEA,CAAA,KAAMT,QAAQ,CAAC,GAAG,CAAE;MAAAQ,QAAA,EAAC;IAE5D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENpB,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAC7BV,UAAU,iBACTL,OAAA,CAAAE,SAAA;QAAAa,QAAA,gBACEf,OAAA,CAACJ,IAAI;UAACyB,EAAE,EAAC,MAAM;UAACP,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAEpC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPpB,OAAA,CAACJ,IAAI;UAACyB,EAAE,EAAC,OAAO;UAACP,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAErC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,eACP,CACH,EAEAf,UAAU,gBACTL,OAAA;QAAQgB,OAAO,EAAEJ,YAAa;QAACE,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAE5D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAETpB,OAAA;QAAQgB,OAAO,EAAEA,CAAA,KAAMT,QAAQ,CAAC,QAAQ,CAAE;QAACO,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAEjE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAjDQD,MAAM;EAAA,QAEIN,WAAW,EACXC,WAAW;AAAA;AAAAwB,EAAA,GAHrBnB,MAAM;AAmDf,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}